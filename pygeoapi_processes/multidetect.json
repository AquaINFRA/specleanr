{
    "version": "0.2.0",
    "id": "multidetect-and-clean",
    "use_case": "BOKU",
    "title": {
        "en": "Run multidetect and clean the data"
    },
    "description": {
        "en": "This process detects outliers using various methods and cleans the data: Ensemble multiple outlier detection methods to ably compare the outliers flagged by each method; then extract final clean data using either absolute or best method generated outliers. For more details, please ask BOKU."
    },
    "jobControlOptions": ["sync-execute", "async-execute"],
    "keywords": ["pan-european use case", "AquaINFRA", "R"],
    "links": [{
        "type": "text/html",
        "rel": "about",
        "title": "GitHub repo",
        "href": "https://github.com/AnthonyBasooma/specleanr",
        "hreflang": "en-US"
    },
    {
        "type": "text/html",
        "rel": "about",
        "title": "Vignette containing this example",
        "href": "https://github.com/AnthonyBasooma/specleanr/blob/master/vignettes/generaloutlier.Rmd",
        "hreflang": "en-US"
    }],
    "inputs": {
        "input_data": {
            "title": "Input table",
            "description": "URL to the input table containing the data to be cleaned from outliers: Data sets for multiple or single species after extraction of environment predictors.",
            "schema": {
                "type": "string"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": ["table", "csv"]
        },
        "colname_variable": {
            "title": "Column name: Variable.",
            "description": "Column name identifying the column containing the variable to be used, e.g. \"Sepal.Length\". TODO Ask Anthony: one or several? A variable to check for outliers especially the one with directly affects species distribution such as maximum temperature of the coldest month for bioclimatic variables (IUCN Standards and Petitions Committee, 2022) or stream power index for hydromorphological parameters (Logez et al., 2012). This parameter is necessary for the univariate outlier detection methods such as Z-score.",
            "schema": {
                "type": "string"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": ["column"]
        },
        "multiple": {
            "title": "true or false: to handle with multiple or single species datasets",
            "description": "If \"false\", and the user is developing species distribution models, then only one species is expected. However, if more than one species is considered then the parameter should be set to \"true \" and the species data must be provided in a single data frame but with a column of species names or a list of separate species data. If \" a single data frame is provided then the \" colsp \" is necessary to capture the column with the species individual names. ",
            "schema": {
                "type": "boolean"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": []
        },
        "colsp": {
            "title": "necessary is multiple is set to \"true\" ",
            "description": "This parameter is mandatory if the parameter \"multiple \" is set to \"true\" and the species data is specifically a data frame of multiple species, not lists. The parameter takes in a string of column name with species names",
            "schema": {
                "type": "string"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": []
        },
        "colnames_to_exclude": {
            "title": "Identify which columns are not necessary in the analysis.",
            "description": "Exclude variables that should not be considered in the fitting the one class model, for example, x and y columns or latitude/longitude or any column that the user doesn't want to consider. This is necessary if using multivariate methods such as isolation forest that will consider all the numerical columns in the dataset as necessary variables.",
            "schema": {
                "type": "string"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": ["column"]
        },
        "methods": {
            "title": "Methods",
            "description": "The name of methods for Outlier detection to be used, as a comma-separated string. Outlier detection methods considered. Use extractMethods (TODO how to link to that) to get outlier detection methods implemented in this package. Example = \"mixediqr, logboxplot,iqr, distboxplot, jknife, semiqr, hampel, iforest, lof, mahal\" (TODO: Any others? Complete set?)",
            "schema": {
                "type": "string",
                "enum": ["mixediqr", "logboxplot", "iqr", "distboxplot", "jknife", "semiqr", "hampel", "iforest", "lof", "mahal"]
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": ["year", "column"]
        },
        "ignore_failing_methods": {
            "title": "True or False: Ignore failing methods?",
            "description": "If \"true\", the method will work with those methods that functioned - for details ask Anthony/BOKU.",
            "schema": {
                "type": "boolean"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": []
        },
        "missingness": {
            "title": "Missingness",
            "description": "Allowed missing values in a column to allow a user to decide whether to remove the individual columns or rows from the data sets. Default 0.1. Therefore, if a column has more than 10 % missing values, then it will be removed from the dataset rather than the rows.",
            "schema": {
                "type": "number"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": []
        },
        "threshold": {
            "title": "Outlier Threshold",
            "description": "Value to consider whether the outlier is an absolute outlier or not. If set to \"null\", loess threshold optimization is used.",
            "schema": {
                "type": "number"
            },
            "minOccurs": 1,
            "maxOccurs": 1,
            "keywords": []
        }
    },
    "outputs": {
        "cleaned_data": {
            "title": "Cleaned dataset",
            "description": "A table.",
            "schema": {
                "type": "object",
                "contentMediaType": "application/json"
            }
        }
    },
    "example": {
        "inputs": {
            "input_data": "bla.csv",
            "colname_variable": "Sepal.Length",
            "multiple_species": false,
            "colname_exclude": "Species",
            "methods": "mixediqr, logboxplot, iqr, distboxplot, jknife, semiqr, hampel, iforest, lof, mahal",
            "ignore_failing_methods": true,
            "missingness": 0.1,
            "threshold": 0.7
        }
    }
}
